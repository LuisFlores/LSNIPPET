-- --------------------------------------------------------
-- Host:                         192.168.0.171
-- Server version:               5.5.42 - MySQL Community Server (GPL) by Remi
-- Server OS:                    Linux
-- HeidiSQL Version:             9.3.0.5099
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- Dumping database structure for db_snippet
DROP DATABASE IF EXISTS `db_snippet`;
CREATE DATABASE IF NOT EXISTS `db_snippet` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `db_snippet`;

-- Dumping structure for table db_snippet.TB_DIRECTORY
DROP TABLE IF EXISTS `TB_DIRECTORY`;
CREATE TABLE IF NOT EXISTS `TB_DIRECTORY` (
  `ID_DIRECTORY` int(10) NOT NULL AUTO_INCREMENT,
  `ID_USER` int(10) NOT NULL DEFAULT '0',
  `DIR_NAME` varchar(100) DEFAULT '0',
  `DIR_DESCRIPTION` varchar(500) DEFAULT NULL,
  `DIR_STATUS` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`ID_DIRECTORY`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- Dumping data for table db_snippet.TB_DIRECTORY: ~5 rows (approximately)
/*!40000 ALTER TABLE `TB_DIRECTORY` DISABLE KEYS */;
INSERT INTO `TB_DIRECTORY` (`ID_DIRECTORY`, `ID_USER`, `DIR_NAME`, `DIR_DESCRIPTION`, `DIR_STATUS`) VALUES
	(1, 1, 'Javascript', 'Snippets javascript', 'ACTIVE'),
	(2, 2, 'Others', '', 'ACTIVE'),
	(3, 1, 'PHP', 'Snippets PHP', 'ACTIVE'),
	(4, 1, 'ProcessMaker', 'ProcessMaker snippets', 'ACTIVE'),
	(5, 1, 'Others', 'Other snippets', 'ACTIVE');
/*!40000 ALTER TABLE `TB_DIRECTORY` ENABLE KEYS */;

-- Dumping structure for table db_snippet.TB_SHARED_SNIPPETS
DROP TABLE IF EXISTS `TB_SHARED_SNIPPETS`;
CREATE TABLE IF NOT EXISTS `TB_SHARED_SNIPPETS` (
  `ID_SHARED_SNIPPET` int(10) NOT NULL AUTO_INCREMENT,
  `ID_USER_FROM` int(10) NOT NULL DEFAULT '0',
  `ID_USER_TO` int(10) NOT NULL DEFAULT '0',
  `ID_SNIPPET` int(10) NOT NULL DEFAULT '0',
  `SHS_DATE` datetime DEFAULT NULL,
  `SHS_STATUS` varchar(50) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID_SHARED_SNIPPET`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- Dumping data for table db_snippet.TB_SHARED_SNIPPETS: ~2 rows (approximately)
/*!40000 ALTER TABLE `TB_SHARED_SNIPPETS` DISABLE KEYS */;
INSERT INTO `TB_SHARED_SNIPPETS` (`ID_SHARED_SNIPPET`, `ID_USER_FROM`, `ID_USER_TO`, `ID_SNIPPET`, `SHS_DATE`, `SHS_STATUS`) VALUES
	(1, 1, 2, 1, '2016-04-18 19:35:03', 'ACTIVE'),
	(2, 2, 1, 2, '2016-04-18 19:42:58', 'ACTIVE');
/*!40000 ALTER TABLE `TB_SHARED_SNIPPETS` ENABLE KEYS */;

-- Dumping structure for table db_snippet.TB_SNIPPET
DROP TABLE IF EXISTS `TB_SNIPPET`;
CREATE TABLE IF NOT EXISTS `TB_SNIPPET` (
  `ID_SNIPPET` int(11) NOT NULL AUTO_INCREMENT,
  `ID_DIRECTORY` int(11) NOT NULL DEFAULT '0',
  `ID_USER` int(11) NOT NULL DEFAULT '0',
  `SNI_DATE` datetime DEFAULT NULL,
  `SNI_TITLE` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `SNI_DESCRIPTION` varchar(500) CHARACTER SET latin1 DEFAULT NULL,
  `SNI_LANGUAGE` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `SNI_CODE` longtext CHARACTER SET latin1,
  `SNI_STATUS` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`ID_SNIPPET`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;

-- Dumping data for table db_snippet.TB_SNIPPET: ~19 rows (approximately)
/*!40000 ALTER TABLE `TB_SNIPPET` DISABLE KEYS */;
INSERT INTO `TB_SNIPPET` (`ID_SNIPPET`, `ID_DIRECTORY`, `ID_USER`, `SNI_DATE`, `SNI_TITLE`, `SNI_DESCRIPTION`, `SNI_LANGUAGE`, `SNI_CODE`, `SNI_STATUS`) VALUES
	(1, 1, 1, '2016-04-18 19:34:49', 'Cantidad de dias entre dos fechas', 'FunciÃ³n para obtener cantidad de dias entre dos fechas ', 'javascript', 'function getDays()\n{\n	if(getField("DepartDate").value!="" && getField("ReturnDate").value!="")\n    {\n		var date1 = getField("DepartDate").value;\n		var date2 = getField("ReturnDate").value;\n		\n		if (date1.indexOf("-") != -1) { date1 = date1.split("-"); } else if (date1.indexOf("/") != -1) { date1 = date1.split("/"); } else { return 0; }\n		if (date2.indexOf("-") != -1) { date2 = date2.split("-"); } else if (date2.indexOf("/") != -1) { date2 = date2.split("/"); } else { return 0; }\n		if (parseInt(date1[0], 10) >= 1000) {\n			var sDate = new Date(date1[0]+"/"+date1[1]+"/"+date1[2]);\n			} else if (parseInt(date1[2], 10) >= 1000) {\n			var sDate = new Date(date1[2]+"/"+date1[0]+"/"+date1[1]);\n			} else {\n			return 0;\n		}\n		if (parseInt(date2[0], 10) >= 1000) {\n			var eDate = new Date(date2[0]+"/"+date2[1]+"/"+date2[2]);\n			} else if (parseInt(date2[2], 10) >= 1000) {\n			var eDate = new Date(date2[2]+"/"+date2[0]+"/"+date2[1]);\n			} else {\n			return 0;\n		}\n		var one_day = 1000*60*60*24;\n		var daysApart = Math.abs(Math.ceil((sDate.getTime()-eDate.getTime())/one_day));\n		\n		getField("DurationDays").value = parseInt(daysApart) + 1;\n	}\n}\ngetField("DepartDate").onchange = getDays;\ngetField("ReturnDate").onchange = getDays;\n\n\n\n\n\n\n\n\n\n\n\n//SIN FINES DE SEMANA\nfunction getDays(){\n\n	if(document.getElementById("form[dateFrom]").value!="" && document.getElementById("form[dateTo]").value!="")\n    {\n		var date1 = document.getElementById("form[dateFrom]").value;\n		var date2 = document.getElementById("form[dateTo]").value;\n		\n		if (date1.indexOf("-") != -1) { date1 = date1.split("-"); } else if (date1.indexOf("/") != -1) { date1 = date1.split("/"); } else { return 0; }\n		if (date2.indexOf("-") != -1) { date2 = date2.split("-"); } else if (date2.indexOf("/") != -1) { date2 = date2.split("/"); } else { return 0; }\n		\n		var sDate = new Date(date1[0]+"/"+date1[1]+"/"+date1[2]);\n		var eDate = new Date(date2[0]+"/"+date2[1]+"/"+date2[2]);\n		\n		if(eDate >= sDate){\n			\n			var cnt = 1;\n			var oneDay = 1000*60*60*24;\n			\n			while(eDate > sDate){\n				\n				sDate.setTime(sDate.getTime()+oneDay);\n				sDate = new Date(sDate.getFullYear() + "/" + (sDate.getMonth() + 1) + "/" + sDate.getDate());\n				\n				var sd = sDate.toString().split(" ");\n				if(sd[0] != "Sat" && sd[0] != "Sun" && sd[0] != "Sab" && sd[0] != "Dom"){\n				\n					cnt++;\n				}\n				\n			}\n			\n			document.getElementById("form[absenceDays]").value = cnt;\n		}\n		else{\n		\n			alert(\'The "To Date" must be higher than "From Date"\');	\n		}\n		\n		console.log(cnt);\n\n	}\n};', 'ACTIVE'),
	(2, 2, 2, '2016-04-18 19:49:58', 'Test', 'Test', 'plain', 'test\n\n\nHHola \n3Â  ', 'ACTIVE'),
	(4, 1, 1, '2016-04-18 20:19:33', 'View mode para textareas PM 3.0', 'Muestra correctamente la info en view mode dentro de textareas', 'javascript', 'var orig = (((($("#texto_respuesta").children()[1]).children)[0]).children[0]).innerHTML;\n\nvar fixed = \'<p>\' + orig.replace(/\\n([ \\t]*\\n)+/g, \'</p><p>\')\n                 .replace(\'\\n\', \'<br />\') + \'</p>\';\n\n(((($("#texto_respuesta").children()[1]).children)[0]).children[0]).innerHTML = fixed;', 'ACTIVE'),
	(5, 3, 1, '2016-04-18 20:27:20', 'Add variables on web entry', 'Permite mandar variables dentro de web entry PM 3.0', 'php', '<?php\n	$a = new pmDynaform(array("CURRENT_DYNAFORM" => "84180149456ddd2194664d6061317361", "APP_DATA" => array("Email" => $_REQUEST[\'email\'])));', 'ACTIVE'),
	(6, 3, 1, '2016-04-18 20:30:35', 'Dinamic URL', 'Dinamicamente permite obtener la URL ', 'php', '<?php\n	$httpServer = (isset($_SERVER[\'HTTPS\'])) ? \'https://\' : \'http://\';\n	$pathServeDocument = $httpServer.$_SERVER[\'HTTP_HOST\']."/sys".SYS_SYS."/".SYS_LANG."/".SYS_SKIN."/flashviewer/serveDocument?pathDocument=".$pathDocument;', 'ACTIVE'),
	(7, 4, 1, '2016-04-18 20:30:17', 'Crear usuarios via trigger', 'Permite crear usuarios, grupos y departamentos', 'php', '<?\n	\n	//***********************************\n	//******* CREATE GROUPS ********\n	//***********************************\n	\n	require_once \'classes/model/Groupwf.php\';\n	\n	$groups = array(\n	\n	"1" => array(\n	"groupName" => "test1"\n	),\n	"2" => array(\n	"groupName" => "test2"\n	),\n	"3" => array(\n	"groupName" => "test3"\n	)\n	);\n	\n	$i = 0;\n	foreach($groups as $row)\n	{\n		$sqlSgroup = "SELECT *\n		FROM CONTENT C\n		WHERE C.CON_VALUE = \'".$row[\'groupName\']."\'\n		AND C.CON_CATEGORY = \'GRP_TITLE\'";\n		$resSgroup = executeQuery($sqlSgroup);\n		$conSgroup = count($resSgroup);\n		\n		if ($conSgroup == 0)\n		{\n			$newGroup[\'GRP_TITLE\'] = $row[\'groupName\'];\n			\n			$oGroup = new Groupwf();\n			$oGroup -> create( $newGroup );\n			$i++;\n		}\n		\n	}\n	\n	g::pr($i." groups have been created");\n	\n	\n	\n	\n	//***********************************\n	//******* CREATE DEPARTMENTS ********\n	//***********************************\n	\n	require_once \'classes/model/Department.php\';\n	\n	$departments = array(\n	\n	"1" => array(\n	"departmentName" => "test1"\n	),\n	"2" => array(\n	"departmentName" => "test2"\n	),\n	"3" => array(\n	"departmentName" => "test3"\n	)\n	);\n	\n	$i = 0;\n	foreach($departments as $row)\n	{\n		$sqlSdepartment = "SELECT *\n		FROM CONTENT C\n		WHERE C.CON_VALUE = \'".$row[\'departmentName\']."\'\n		AND C.CON_CATEGORY = \'DEPO_TITLE\'";\n		$resSdepartment = executeQuery($sqlSdepartment);\n		$conSdepartment = count($resSdepartment);\n		\n		if ($conSdepartment == 0)\n		{\n			$newDepartment[\'DEP_TITLE\'] = $row[\'departmentName\'];\n			\n			$oDept = new Department();\n			$oDept->create( $newDepartment );\n			$i++;\n		}\n		\n	}\n	\n	g::pr($i." departments have been created");\n	\n	\n	\n	//***********************************\n	//********* CREATE USERS ************\n	//***********************************\n	\n	$users = array(\n	\n	"1" => array(\n	"userName" => "ana",\n	"pass" => "sample",\n	"firstName" => "Ana",\n	"lastName" => "Colin",\n	"email" => "luis@colosa.com",\n	"userType" => "PROCESSMAKER_OPERATOR"\n	),\n	"2" => array(\n	"userName" => "paul",\n	"pass" => "sample",\n	"firstName" => "Paul",\n	"lastName" => "Fenix",\n	"email" => "luis@colosa.com",\n	"userType" => "PROCESSMAKER_OPERATOR"\n	),\n	"3" => array(\n	"userName" => "charlotte",\n	"pass" => "sample",\n	"firstName" => "Charlotte",\n	"lastName" => "Leo",\n	"email" => "luis@colosa.com",\n	"userType" => "PROCESSMAKER_OPERATOR"\n	)/*,\n		"4" => array(\n		"userName" => "ian",\n		"pass" => "sample",\n		"firstName" => "Ian",\n		"lastName" => "Barrett",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_ADMIN"\n		),\n		"5" => array(\n		"userName" => "adam",\n		"pass" => "sample",\n		"firstName" => "Adam",\n		"lastName" => "Williams",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"6" => array(\n		"userName" => "jeremiah",\n		"pass" => "sample",\n		"firstName" => "Jeremiah",\n		"lastName" => "Corey",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"7" => array(\n		"userName" => "juan",\n		"pass" => "sample",\n		"firstName" => "Juan",\n		"lastName" => "Talley",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"8" => array(\n		"userName" => "carter",\n		"pass" => "sample",\n		"firstName" => "Carter",\n		"lastName" => "Yourdon",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"9" => array(\n		"userName" => "julian",\n		"pass" => "sample",\n		"firstName" => "Julian",\n		"lastName" => "Dribin",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"10" => array(\n		"userName" => "jason",\n		"pass" => "sample",\n		"firstName" => "Jason",\n		"lastName" => "Hessmiller",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"11" => array(\n		"userName" => "owen",\n		"pass" => "sample",\n		"firstName" => "owen",\n		"lastName" => "Bechtel",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"12" => array(\n		"userName" => "hunter",\n		"pass" => "sample",\n		"firstName" => "Hunter",\n		"lastName" => "Brule",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"13" => array(\n		"userName" => "aaron",\n		"pass" => "sample",\n		"firstName" => "Aaron",\n		"lastName" => "Parks",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"14" => array(\n		"userName" => "arthur",\n		"pass" => "sample",\n		"firstName" => "Arthur",\n		"lastName" => "Fabel",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"15" => array(\n		"userName" => "isaiah",\n		"pass" => "sample",\n		"firstName" => "Isaiah",\n		"lastName" => "Murphy",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"16" => array(\n		"userName" => "jose",\n		"pass" => "sample",\n		"firstName" => "Jose",\n		"lastName" => "Mahoney",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"17" => array(\n		"userName" => "kevin",\n		"pass" => "sample",\n		"firstName" => "Kevin",\n		"lastName" => "Salvaggio",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"18" => array(\n		"userName" => "dylan",\n		"pass" => "sample",\n		"firstName" => "Dylan",\n		"lastName" => "Kelly",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"19" => array(\n		"userName" => "gavin",\n		"pass" => "sample",\n		"firstName" => "Gavin",\n		"lastName" => "Crowley",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		),\n		"20" => array(\n		"userName" => "brianna",\n		"pass" => "sample",\n		"firstName" => "Brianna",\n		"lastName" => "Creelman",\n		"email" => "luis@colosa.com",\n		"userType" => "PROCESSMAKER_OPERATOR"\n		)\n	*/\n	);\n	\n	\n	$i = 0;\n	foreach($users as $row)\n	{\n		$sqlSuser = "SELECT *\n		FROM USERS\n		WHERE USR_USERNAME = \'".$row[\'userName\']."\'";\n		$resSuser = executeQuery($sqlSuser);\n		$conSuser = count($resSuser);\n		\n		if ($conSuser == 0)\n		{\n			PMFCreateUser($row[\'userName\'], $row[\'pass\'], $row[\'firstName\'], $row[\'lastName\'], $row[\'email\'], $row[\'userType\']);\n			$i++;\n		}\n		\n	}\n	g::pr($i." Users have been created");\n	die;\n	\n	\n	\n	', 'ACTIVE'),
	(8, 4, 1, '2016-04-18 20:31:37', 'Get output document PM 3.0', 'Obtiene el output document', 'php', '<?php\n\n$outDocId = \'72421152556d9e2421f9fb3056382876\';\n	PMFGenerateOutputDocument($outDocId);\n	$sqlScarta = "SELECT * \n	FROM APP_DOCUMENT \n	WHERE APP_UID = \'".@@APPLICATION."\' \n	AND DOC_UID = \'".$outDocId."\'\n	ORDER BY DOC_VERSION DESC";\n	$result = executeQuery($sqlScarta);\n	$docId = $result[1][\'APP_DOC_UID\'];\n	$docVr = $result[1][\'DOC_VERSION\'];\n	$nameDocument = $docId."_".$docVr.".pdf";\n	\n	$dir1 = substr(@@APPLICATION, 0, 3);\n	$dir2 = substr(@@APPLICATION, 3, 3);\n	$dir3 = substr(@@APPLICATION, 6, 3);\n	$dir4 = substr(@@APPLICATION, 9, 23);\n	\n	$outputDocument = PATH_DOCUMENT . $dir1."/".$dir2."/".$dir3."/".$dir4."/outdocs/".$nameDocument;', 'ACTIVE'),
	(9, 4, 1, '2016-05-03 18:16:27', 'REST functions PM', 'Ejemplo para usar REST en PM', 'php', '<?php\n\n	G::loadClass(\'pmFunctions\');\n	\n	/*\n  * Get the access token REST API\n  *\n  * @param (String) $pmServer\n  * @param (String) $pmWorkspace\n  * @param (String) $clientId\n  * @param (String) $clientSecret\n  * @param (String) $username\n  * @param (String) $password\n  * @return Object $oToken\n  *\n  * by Luis Flores \n	* luis@processmaker.com\n  */\n	\n	function pmRestLogin($pmServer, $pmWorkspace, $clientId, $clientSecret, $username, $password) { \n\n		$postParams = array(\n		\'grant_type\'    => \'password\',\n		\'scope\'         => \'*\',       //set to \'view_process\' if not changing the process\n		\'client_id\'     => $clientId,\n		\'client_secret\' => $clientSecret, \n		\'username\'      => $username,\n		\'password\'      => $password \n		);\n		\n		$server = $pmServer . PATH_SEP . $pmWorkspace . "/oauth2/token";\n		\n		$ch = curl_init($server);\n		curl_setopt($ch, CURLOPT_TIMEOUT, 30);\n		curl_setopt($ch, CURLOPT_POST, 1);\n		curl_setopt($ch, CURLOPT_POSTFIELDS, $postParams);\n		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n		\n		$oToken = json_decode(curl_exec($ch));\n		$httpStatus = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n		curl_close($ch);\n		\n		if ($httpStatus != 200) {\n			print "Error in HTTP status code: $httpStatus\\n";\n			return null;\n		}\n		elseif (isset($oToken->error)) {\n			print "Error logging into $pmServer:\\n" .\n			"Error:       {".$oToken->error."}\\n" .\n			"Description: {".$oToken->description."}\\n";\n		}\n		else {\n			//At this point $oToken->access_token can be used to call REST endpoints.\n			\n			//If planning to use the access_token later, either save the access_token \n			//and refresh_token as cookies or save them to a file in a secure location. \n			\n			//If saving them as cookies:\n			setcookie("access_token",  $oToken->access_token,  time() + 3600);\n			setcookie("refresh_token", $oToken->refresh_token); //refresh token doesn\'t expire\n			setcookie("client_id",     $clientId);\n			setcookie("client_secret", $clientSecret);\n			\n		}\n		return $oToken; \n	}\n	\n	/*\n  * Function to consume REST API Endpoints\n  *\n  * @param (String) $pmServer\n  * @param (String) $method\n  * @param (String) $endpoint\n  * @param (String) $aVars\n  * @param (String) $accessToken\n  * @return Object $oRet\n  *\n  * by Luis Flores\n  */\n	\n	function pmRestRequest($pmServer, $method, $endpoint, $aVars = null, $accessToken = null) {\n		\n		if (empty($accessToken) and isset($_COOKIE[\'access_token\'])) \n		$accessToken = $_COOKIE[\'access_token\'];\n		\n		if (empty($accessToken)) { //if the access token has expired\n			//To check if the PM login session has expired: !isset($_COOKIE[\'PHPSESSID\'])\n			header("Location: loginForm.php"); //change to match your login method\n			die();\n		}\n		\n		//add beginning / to endpoint if it doesn\'t exist:\n		if (!empty($endpoint) and $endpoint[0] != "/")\n		$endpoint = "/" . $endpoint; \n\n		$ch = curl_init($pmServer . $endpoint);\n		curl_setopt($ch, CURLOPT_HTTPHEADER, array("Authorization: Bearer " . $accessToken));\n		curl_setopt($ch, CURLOPT_TIMEOUT, 30);\n		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n		$method = strtoupper($method);\n		\n		switch ($method) {\n			case "GET":\n			break;\n			case "DELETE":\n			curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "DELETE");\n			break;\n			case "POST":\n			curl_setopt($ch, CURLOPT_POST, true); \n			curl_setopt($ch, CURLOPT_POSTFIELDS, $aVars);\n			break;\n			case "PUT":\n			curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n			curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($aVars));\n			break;\n			default:\n			throw new Exception("Error: Invalid HTTP method \'$method\' $endpoint");\n			return null;\n		}\n		\n		$oRet = new StdClass;\n		$oRet->response = json_decode(curl_exec($ch));\n		$oRet->status   = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n		curl_close($ch);\n		\n		if ($oRet->status == 401) { //if session has expired or bad login:\n			header("Location: loginForm.php"); //change to match your login method\n			die();  \n		}\n		elseif ($oRet->status != 200 and $oRet->status != 201) { //if error\n			if ($oRet->response and isset($oRet->response->error)) {\n				print "Error in $pmServer:\\nCode: {$oRet->response->error->code}\\n" .\n				"Message: {$oRet->response->error->message}\\n";\n			}\n			else {\n				print "Error: HTTP status code: $oRet->status\\n";\n			}\n		}\n		return $oRet; \n	}\n	\n	//*******************************************************************************************\n	\n	//Call functions to consume REST API\n	$httpServer = (isset($_SERVER[\'HTTPS\'])) ? \'https://\' : \'http://\';\n	$pmServer    	=  $httpServer.$_SERVER[\'HTTP_HOST\'];\n	$pmWorkspace = SYS_SYS;\n	//ProcessMaker Oauth settings\n	$clientId = \'PLGMAAJKVXZHTNLGXIQYDXNAUVLIDLOT\';\n	$clientSecret = \'90038662857229ee7170501017683160\';\n	$username = \'admin\';\n	$password = \'admin\';\n	\n	//Get token for the REST API\n	$oToken = pmRestLogin($pmServer, $pmWorkspace, $clientId, $clientSecret, $username, $password);\n\n	if (isset($oToken) and isset($oToken->access_token)) {\n		\n		$aVars = array(\n		\'APP_UID\'   => \'1917970595706b8be26b6e8008939641\'\n		);\n		$aVars = http_build_query($aVars);\n		$oRet = pmRestRequest($pmServer, "POST", "/api/1.0/" . $pmWorkspace . "/plugin-psSanExtendEndpoint/sanmina/initiator/", $aVars, $oToken->access_token);	\n\n		$string = json_encode($oRet->response);\n		$finalResult = json_decode($string,true);\n		\n		g::pr($finalResult);die;\n	}\n	\n	\n', 'ACTIVE'),
	(10, 4, 1, '2016-04-18 20:33:22', 'Saltar dynaforms por triggers', '', 'php', '<?\nG::header("location: cases_Step?UID=537691623544166e96de3d9008846538&TYPE=DYNAFORM&POSITION=2&ACTION=EDIT");\ndie;', 'ACTIVE'),
	(11, 4, 1, '2016-04-18 20:34:10', 'Siguiente usuario en PM', 'Obtiene al siguiente usuario', 'php', '<?\n//Get the last index from APP_DELEGATION\n$sqlSindex = "SELECT MAX(DEL_INDEX) AS DEL_INDEX\nFROM APP_DELEGATION\nWHERE APP_UID = \'".@@APPLICATION."\'";\n$resSindex = executeQuery($sqlSindex);\n	\n$maxIndex = $resSindex[1][\'DEL_INDEX\'];\n	\n//Get the next user ID\n$sqlSiduser = "SELECT USR_UID\nFROM APP_DELEGATION\nWHERE APP_UID = \'".@@APPLICATION."\'\nAND DEL_INDEX = \'".$maxIndex."\'";\n$resSiduser = executeQuery($sqlSiduser);\n$idNextUser = $resSiduser[1][\'USR_UID\'];\n\n$nextUser = userInfo($idNextUser);\n@@HRDName = $nextUser [\'firstname\'].\' \'.$nextUser [\'lastname\'];\n$nextUserEmail = $nextUser [\'mail\'];\n\n	\n$currentUser = userInfo(@@USER_LOGGED);\n$currentUserEmail = $currentUser [\'mail\'];\n	\n	\n$aFields[\'HRDName\'] = @@HRDName;\n$aFields[\'CaseNumber \'] = @@CaseNumber;\n$aFields[\'ServerLink\'] = @@ServerLink;\n$aFields[\'HODName\'] = @@HODName;\n	\n	\nPMFSendMessage(@@APPLICATION, $currentUserEmail, $nextUserEmail,\' \', \' \', "Travel Requisition Approved by HOD", \'Review_HOD_Approved.html\',$aFields);\n	', 'ACTIVE'),
	(12, 5, 1, '2016-04-18 20:42:56', 'Comandos importantes en linux', 'Comando genericos de linux que son importantes', 'plain', 'BUSCAR TEXTO\ngrep -R "ReportTablePeer" /opt/processmaker | less\n\nBUSCAR ARCHIVO\nfind . -name CaseConsolidatedCorePeer\n\nREVISAR EL PASSWORD ROOT MYSQL\nless /root/bin/bydatabases.sh\n', 'ACTIVE'),
	(13, 4, 1, '2016-04-18 20:37:00', 'Configuracion del email en PM', 'Configuracion para el email', 'plain', 'SMTP (PHPmailer)\nimap.gmail.com\n25\nsi\nluis@colosa.com\npassword\nsi\nluis@colosa.com\nTLS', 'ACTIVE'),
	(14, 4, 1, '2016-04-18 20:37:32', 'Formato para enviar licencias en PM', 'Formato para enviar las licencias en email ', 'plain', 'Link : http://download.processmaker.com/syspm3/en/green/services/downloadForm\nLicense Code : 2NIu4bWguq6B0oC6YqdroY+MnV67 (License)\nEnterprise Code : 2NIu4bWguq6B0oC6YqdroY+MnV6o (Plugins)\nDelivery Code : 2NIu4bWguq6B0oC6YqdroY+MnV6n (Addons plugins)\nEnterprise Edition Code: 2NIu4bWguq6B0oC6YqdroY+MnV6oeA (ProcessMaker)', 'ACTIVE'),
	(15, 5, 1, '2016-04-18 20:38:48', 'Print like PM', 'Muestra la informacion estructurada', 'php', '<?\nfunction fpr($var){\n	\n	print ("<pre>") ;\n	print_r( $var );\n	print ("</pre>") ;\n}', 'ACTIVE'),
	(16, 4, 1, '2016-04-18 20:39:22', 'Remove cases on PM', 'Elimina casos en PM', 'sql', ' TRUNCATE TABLE APPLICATION;\n TRUNCATE TABLE APP_DELAY;\n TRUNCATE TABLE APP_DELEGATION;\n TRUNCATE TABLE APP_DOCUMENT;\n TRUNCATE TABLE APP_MESSAGE;\n TRUNCATE TABLE APP_OWNER;\n TRUNCATE TABLE APP_THREAD;\n TRUNCATE TABLE SUB_APPLICATION;\n TRUNCATE TABLE APP_EVENT;\n TRUNCATE TABLE APP_CACHE_VIEW;     \n TRUNCATE TABLE APP_HISTORY;        \n TRUNCATE TABLE APP_FOLDER;         \n TRUNCATE TABLE SEQUENCES; \n\n\n\n\n\nTRUNCATE `APPLICATION`;\nTRUNCATE `APP_ASSIGN_SELF_SERVICE_VALUE`;\nTRUNCATE `APP_CACHE_VIEW`;\nTRUNCATE `APP_DELAY`;\nTRUNCATE `APP_DELEGATION`;\nTRUNCATE `APP_DOCUMENT`;\nTRUNCATE `APP_EVENT`;\nTRUNCATE `APP_FOLDER`;\nTRUNCATE `APP_HISTORY`;\nTRUNCATE `APP_MESSAGE`;\nTRUNCATE `APP_NOTES`;\nTRUNCATE `APP_OWNER`;\nTRUNCATE `APP_SOLR_QUEUE`;\nTRUNCATE `APP_THREAD`;\nTRUNCATE `LIST_CANCELED`;\nTRUNCATE `LIST_COMPLETED`;\nTRUNCATE `LIST_INBOX`;\nTRUNCATE `LIST_MY_INBOX`;\nTRUNCATE `LIST_PARTICIPATED_HISTORY`;\nTRUNCATE `LIST_PARTICIPATED_LAST`;\nTRUNCATE `LIST_PAUSED`;\nTRUNCATE `LIST_UNASSIGNED`;\nTRUNCATE `LIST_UNASSIGNED_GROUP`;\nTRUNCATE `MESSAGE_APPLICATION`;\nTRUNCATE `SUB_APPLICATION`;\nDELETE FROM `CONTENT` WHERE `CON_CATEGORY` LIKE \'APP_%\';\nDELETE FROM `SEQUENCES` WHERE `SEQ_NAME` = \'APP_NUMBER\';\nUPDATE `USERS` SET `USR_TOTAL_INBOX` = 0, `USR_TOTAL_DRAFT` = 0, `USR_TOTAL_CANCELLED` = 0, `USR_TOTAL_PARTICIPATED` = 0, `USR_TOTAL_PAUSED` = 0, `USR_TOTAL_COMPLETED` = 0, `USR_TOTAL_UNASSIGNED` = 0;    \nUPDATE APP_SEQUENCE SET ID = \'0\';', 'ACTIVE'),
	(17, 4, 1, '2016-05-03 19:27:54', 'Execute cron ProcessMaker', 'Maneras de ejecutar el cron', 'plain', 'Cron KPI\ncd /opt/processmaker/workflow/engine/bin\nphp -f cron.php +wnombre_workspace calculated\nphp -f cron.php +wnombre_workspace calculatedapp\nphp -f cron.php +wnombre_workspace report_by_user +init-date"2010-01-01"\nphp -f cron.php +wnombre_workspace report_by_process +init-date"2010-01-01"ate"2010-01-01"\n\n\nCron generico\ncd /opt/processmaker/workflow/engine/bin/\nphp -f cron.php +wkravitz\n\n\nphp -f /opt/processmaker3.0/workflow/engine/bin/cron.php +wworkflow30\n\n\n\n#Configuracion del crontab para el servidor\n\n/etc/crontab\n# For details see man 4 crontabs\n\n# Example of job definition:\n# .---------------- minute (0 - 59)\n# |  .------------- hour (0 - 23)\n# |  |  .---------- day of month (1 - 31)\n# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...\n# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\n# |  |  |  |  |\n# *  *  *  *  * user-name command to be executed\n30 3  *  *  * root /root/bin/directoryPermissions.sh\n*/2 * * * * root php -f /opt/processmaker/workflow/engine/bin/cron.php  +wpmocr\n*/2 * * * * root php -f /opt/processmaker/workflow/engine/bin/cron.php  +waar\n\n#*/1 * * * * root wget -q -F -O - http://192.168.1.46/syselectronics/en/neoclassic/electronicsManagement/services/controlTime', 'ACTIVE'),
	(18, 3, 1, '2016-05-20 14:51:22', 'Print in error_log', 'Permite imprimir arrays en error_log', 'php', '<?\nerror_log( print_R($data,TRUE));', 'ACTIVE'),
	(19, 5, 1, '2016-06-09 18:45:18', 'Upgrade PHP', 'Permite hacer upgrade a PHP', 'plain', 'PAGINA WEB\nhttps://webtatic.com/packages/php55/\n\n\n\n1.  yum list installed | grep php\n2. yum remove php.x86_64 php-cli.x86_64 php-common.x86_64 php-gd.x86_64 php-ldap.x86_64 php-mbstring.x86_64 ........', 'ACTIVE'),
	(20, 5, 1, '2016-06-16 20:51:15', 'File field bootstrap', '', 'html', '<div class="input-group">\n	<span class="input-group-btn">\n		<span class="btn btn-primary" onclick="$(this).parent().find(\'input[type=file]\').click();">Browse</span>\n		<input id="fileImage" name="fileImage" onchange="$(this).parent().parent().find(\'.form-control\').html($(this).val().split(/[\\\\|/]/).pop());" style="display: none;" type="file">\n	</span>\n	<span class="form-control"></span>\n</div>', 'ACTIVE');
/*!40000 ALTER TABLE `TB_SNIPPET` ENABLE KEYS */;

-- Dumping structure for table db_snippet.USERS
DROP TABLE IF EXISTS `USERS`;
CREATE TABLE IF NOT EXISTS `USERS` (
  `ID_USER` int(10) NOT NULL AUTO_INCREMENT,
  `USERNAME` varchar(200) CHARACTER SET latin1 DEFAULT '0',
  `PASSWORD` varchar(200) CHARACTER SET latin1 DEFAULT '0',
  `FIRSTNAME` varchar(200) CHARACTER SET latin1 DEFAULT '0',
  `LASTNAME` varchar(200) CHARACTER SET latin1 DEFAULT '0',
  `EMAIL` varchar(200) CHARACTER SET latin1 DEFAULT '0',
  `STATUS` varchar(200) CHARACTER SET latin1 DEFAULT '0',
  PRIMARY KEY (`ID_USER`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- Dumping data for table db_snippet.USERS: ~2 rows (approximately)
/*!40000 ALTER TABLE `USERS` DISABLE KEYS */;
INSERT INTO `USERS` (`ID_USER`, `USERNAME`, `PASSWORD`, `FIRSTNAME`, `LASTNAME`, `EMAIL`, `STATUS`) VALUES
	(1, 'admin', '21232f297a57a5a743894a0e4a801fc3', 'Admin', '', 'luis@processmaker.com', 'ACTIVE'),
	(2, 'administrator', '5e8ff9bf55ba3508199d22e984129be6', 'Administrator', '', 'luis@processmaker.com', 'ACTIVE');
/*!40000 ALTER TABLE `USERS` ENABLE KEYS */;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
